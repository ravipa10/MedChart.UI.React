{"ast":null,"code":"var _jsxFileName = \"C:\\\\Pavithra_ThinkPad\\\\medchart\\\\MedChart\\\\MedChart.UI.React\\\\src\\\\Components\\\\EditBloodPressure.Component.tsx\";\nimport React from 'react';\nimport * as toastr from 'toastr';\nimport BloodPressure from '../Models/BloodPressureModel';\nimport BaseService from '../Services/Base.Service';\nimport { Form } from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Edit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSave = () => {\n      console.log(this.state.bloodPressure);\n      BaseService.update(\"/blood_pressure/\", this.props.match.params.id, this.state.bloodPressure).then(rp => {\n        if (rp.Status) {\n          toastr.success('Blood Pressure entry updated.');\n          this.props.history.back();\n        } else {\n          toastr.error(rp.Messages);\n          console.log(\"Messages: \" + rp.Messages);\n          console.log(\"Exception: \" + rp.Exception);\n        }\n      });\n    };\n\n    this.state = {\n      bloodPressure: {\n        Id: '',\n        SystolicReading: 0,\n        DiabolicReading: 0,\n        HeartRate: 0,\n        ExamDate: new Date(),\n        CreatedDate: new Date(),\n        UpdatedDate: new Date()\n      }\n    };\n    this.onFieldValueChange = this.onFieldValueChange.bind(this);\n  }\n\n  onFieldValueChange(fieldName, value) {\n    const nextState = { ...this.state,\n      bloodPressure: { ...this.state.bloodPressure,\n        [fieldName]: value\n      }\n    };\n    this.setState(nextState);\n  }\n\n  componentDidMount() {\n    BaseService.get('/blood_pressure/', this.props.match.params.id).then(rp => {\n      if (rp.Status) {\n        const bloodPressure = rp.Data;\n        this.setState({\n          bloodPressure: new BloodPressure(bloodPressure.systolicReading, bloodPressure.diabolicReading, bloodPressure.heartRate, bloodPressure.examDate, bloodPressure.createdDate, bloodPressure.updatedDate, bloodPressure.Id)\n        });\n      } else {\n        toastr.error(rp.Messages);\n        console.log(\"Messages: \" + rp.Messages);\n        console.log(\"Exception: \" + rp.Exception);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      bloodPressure: this.state.bloodPressure,\n      onChange: this.onFieldValueChange,\n      onSave: this.onSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Pavithra_ThinkPad/medchart/MedChart/MedChart.UI.React/src/Components/EditBloodPressure.Component.tsx"],"names":["React","toastr","BloodPressure","BaseService","Form","Edit","Component","constructor","props","onSave","console","log","state","bloodPressure","update","match","params","id","then","rp","Status","success","history","back","error","Messages","Exception","Id","SystolicReading","DiabolicReading","HeartRate","ExamDate","Date","CreatedDate","UpdatedDate","onFieldValueChange","bind","fieldName","value","nextState","setState","componentDidMount","get","Data","systolicReading","diabolicReading","heartRate","examDate","createdDate","updatedDate","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,IAAT,QAAqB,QAArB;;AAoBA,eAAe,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmD;AAE9DC,EAAAA,WAAW,CAACC,KAAD,EAAgB;AAEvB,UAAMA,KAAN;;AAFuB,SA0DnBC,MA1DmB,GA0DV,MAAM;AAEnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,aAAvB;AACAV,MAAAA,WAAW,CAACW,MAAZ,CAAkC,kBAAlC,EAAsD,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9E,EAAkF,KAAKL,KAAL,CAAWC,aAA7F,EAA4GK,IAA5G,CACKC,EAAD,IAAQ;AACJ,YAAIA,EAAE,CAACC,MAAP,EAAe;AACXnB,UAAAA,MAAM,CAACoB,OAAP,CAAe,+BAAf;AACA,eAAKb,KAAL,CAAWc,OAAX,CAAmBC,IAAnB;AACH,SAHD,MAGO;AACHtB,UAAAA,MAAM,CAACuB,KAAP,CAAaL,EAAE,CAACM,QAAhB;AACAf,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAeQ,EAAE,CAACM,QAA9B;AACAf,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBQ,EAAE,CAACO,SAA/B;AACH;AACJ,OAVL;AAaH,KA1E0B;;AAIvB,SAAKd,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE;AACXc,QAAAA,EAAE,EAAE,EADO;AAEXC,QAAAA,eAAe,EAAE,CAFN;AAGXC,QAAAA,eAAe,EAAE,CAHN;AAIXC,QAAAA,SAAS,EAAE,CAJA;AAKXC,QAAAA,QAAQ,EAAE,IAAIC,IAAJ,EALC;AAMXC,QAAAA,WAAW,EAAE,IAAID,IAAJ,EANF;AAOXE,QAAAA,WAAW,EAAE,IAAIF,IAAJ;AAPF;AADN,KAAb;AAWA,SAAKG,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AAEH;;AAKOD,EAAAA,kBAAkB,CAACE,SAAD,EAAoBC,KAApB,EAAmC;AACzD,UAAMC,SAAS,GAAG,EACd,GAAG,KAAK3B,KADM;AAEdC,MAAAA,aAAa,EAAE,EACX,GAAG,KAAKD,KAAL,CAAWC,aADH;AAEX,SAACwB,SAAD,GAAaC;AAFF;AAFD,KAAlB;AAQA,SAAKE,QAAL,CAAcD,SAAd;AACH;;AAEME,EAAAA,iBAAiB,GAAG;AACvBtC,IAAAA,WAAW,CAACuC,GAAZ,CAA+B,kBAA/B,EAAmD,KAAKlC,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3E,EAA+EC,IAA/E,CACKC,EAAD,IAAQ;AACJ,UAAIA,EAAE,CAACC,MAAP,EAAe;AACX,cAAMP,aAAa,GAAGM,EAAE,CAACwB,IAAzB;AACA,aAAKH,QAAL,CAAc;AAAE3B,UAAAA,aAAa,EAAE,IAAIX,aAAJ,CAC3BW,aAAa,CAAC+B,eADa,EAE3B/B,aAAa,CAACgC,eAFa,EAG3BhC,aAAa,CAACiC,SAHa,EAI3BjC,aAAa,CAACkC,QAJa,EAK3BlC,aAAa,CAACmC,WALa,EAM3BnC,aAAa,CAACoC,WANa,EAO3BpC,aAAa,CAACc,EAPa;AAAjB,SAAd;AAQH,OAVD,MAUO;AACH1B,QAAAA,MAAM,CAACuB,KAAP,CAAaL,EAAE,CAACM,QAAhB;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAeQ,EAAE,CAACM,QAA9B;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBQ,EAAE,CAACO,SAA/B;AACH;AACJ,KAjBL;AAoBH;;AAqBDwB,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,IAAD;AACI,MAAA,aAAa,EAAE,KAAKtC,KAAL,CAAWC,aAD9B;AAEI,MAAA,QAAQ,EAAE,KAAKsB,kBAFnB;AAGI,MAAA,MAAM,EAAE,KAAK1B;AAHjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAtF6D","sourcesContent":["import React from 'react';\r\nimport * as toastr from 'toastr';\r\nimport BloodPressure from '../Models/BloodPressureModel';\r\nimport BaseService from '../Services/Base.Service';\r\nimport { Form } from './Form';\r\nimport { History } from 'history';\r\n\r\ninterface IProps { \r\n    history: History;\r\n    //Map properties match\r\n    match:{ \r\n        isExact: boolean\r\n        params: {\r\n            id:string\r\n        },\r\n        path: string,\r\n        url: string,\r\n    }\r\n}\r\ninterface IState {\r\n    bloodPressure: BloodPressure\r\n}\r\n\r\n\r\nexport default class Edit extends React.Component<IProps, IState> {\r\n\r\n    constructor(props: IProps) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            bloodPressure: {\r\n                Id: '',\r\n                SystolicReading: 0,\r\n                DiabolicReading: 0,\r\n                HeartRate: 0,\r\n                ExamDate: new Date(),\r\n                CreatedDate: new Date(),\r\n                UpdatedDate: new Date()\r\n            }\r\n        }\r\n        this.onFieldValueChange = this.onFieldValueChange.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    private onFieldValueChange(fieldName: string, value: string) { \r\n        const nextState = {\r\n            ...this.state,\r\n            bloodPressure: {\r\n                ...this.state.bloodPressure,\r\n                [fieldName]: value,\r\n            }\r\n        };\r\n\r\n        this.setState(nextState);\r\n    }\r\n\r\n    public componentDidMount() { \r\n        BaseService.get<BloodPressure>('/blood_pressure/', this.props.match.params.id).then(\r\n            (rp) => {\r\n                if (rp.Status) {\r\n                    const bloodPressure = rp.Data;\r\n                    this.setState({ bloodPressure: new BloodPressure(\r\n                        bloodPressure.systolicReading,\r\n                        bloodPressure.diabolicReading,\r\n                        bloodPressure.heartRate,\r\n                        bloodPressure.examDate,\r\n                        bloodPressure.createdDate,\r\n                        bloodPressure.updatedDate,\r\n                        bloodPressure.Id)});\r\n                } else {\r\n                    toastr.error(rp.Messages);\r\n                    console.log(\"Messages: \" + rp.Messages);\r\n                    console.log(\"Exception: \" + rp.Exception);\r\n                }\r\n            }\r\n\r\n        );\r\n    }\r\n\r\n\r\n    private onSave = () => {\r\n\r\n        console.log(this.state.bloodPressure);\r\n        BaseService.update<BloodPressure>(\"/blood_pressure/\", this.props.match.params.id, this.state.bloodPressure).then(\r\n            (rp) => {\r\n                if (rp.Status) {\r\n                    toastr.success('Blood Pressure entry updated.');\r\n                    this.props.history.back();\r\n                } else {\r\n                    toastr.error(rp.Messages);\r\n                    console.log(\"Messages: \" + rp.Messages);\r\n                    console.log(\"Exception: \" + rp.Exception);\r\n                }\r\n            }\r\n        );\r\n\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <Form\r\n                bloodPressure={this.state.bloodPressure}\r\n                onChange={this.onFieldValueChange}\r\n                onSave={this.onSave}\r\n            />\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}