{"ast":null,"code":"var _jsxFileName = \"C:\\\\Pavithra_ThinkPad\\\\medchart\\\\MedChart\\\\MedChart.UI.React\\\\src\\\\Components\\\\index.tsx\";\nimport * as React from \"react\";\nimport TableRow from \"./TableRow\";\nimport BloodPressure from '../Models/BloodPressureModel';\nimport BaseService from '../Services/Base.Service';\nimport * as toastr from \"toastr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listBloodPressures: new Array(),\n      isReady: false,\n      hasError: false\n    };\n\n    this.tabRow = () => {\n      if (!this.state.isReady) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 6,\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner-border\",\n              role: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"visually-hidden\",\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this);\n      }\n\n      if (this.state.hasError) {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: 6,\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger\",\n              role: \"alert\",\n              children: \"An error occurred!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this);\n      }\n\n      return this.state.listBloodPressures.map(function (object, i) {\n        return /*#__PURE__*/_jsxDEV(TableRow, {\n          index: i + 1,\n          bloodPressure: object\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 14\n        }, this);\n      });\n    };\n\n    this.state = {\n      isReady: false,\n      listBloodPressures: Array(),\n      hasError: false\n    };\n  }\n\n  componentDidMount() {\n    BaseService.getAll(\"/blood_pressure\").then(rp => {\n      if (rp.Status) {\n        var data = rp.Data;\n        data = JSON.parse(data);\n        const listBloodPressures = new Array();\n        data.forEach(bp => {\n          listBloodPressures.push(new BloodPressure(bp.SystolicReading, bp.DiabolicReading, bp.HeartRate, bp.ExamDate, bp.CreatedDate, bp.UpdatedDate, bp.Id));\n        });\n        this.setState({\n          listBloodPressures: listBloodPressures\n        });\n        this.setState({\n          isReady: true\n        });\n      } else {\n        this.setState({\n          isReady: true\n        });\n        this.setState({\n          hasError: true\n        });\n        console.log(\"Messages: \" + rp.Messages);\n        console.log(\"Exception: \" + rp.Exception);\n      }\n    });\n    setTimeout(() => {\n      if (!this.state.isReady) {\n        toastr.info(\"Service may have restarted, please wait!\", \"\", {\n          timeOut: 8000\n        });\n      }\n\n      if (this.state.hasError) {\n        toastr.error(\"An error occurred!\", \"\", {\n          timeOut: 8000\n        });\n      }\n    }, 2000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \"Blood Pressure List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        style: {\n          marginTop: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Systolic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Diastolic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Heart Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Exam Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-center\",\n              colSpan: 2,\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.tabRow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["C:/Pavithra_ThinkPad/medchart/MedChart/MedChart.UI.React/src/Components/index.tsx"],"names":["React","TableRow","BloodPressure","BaseService","toastr","Index","Component","constructor","props","state","listBloodPressures","Array","isReady","hasError","tabRow","map","object","i","componentDidMount","getAll","then","rp","Status","data","Data","JSON","parse","forEach","bp","push","SystolicReading","DiabolicReading","HeartRate","ExamDate","CreatedDate","UpdatedDate","Id","setState","console","log","Messages","Exception","setTimeout","info","timeOut","error","render","marginTop"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport TableRow from \"./TableRow\";\r\nimport BloodPressure from '../Models/BloodPressureModel';\r\nimport BaseService from '../Services/Base.Service';\r\nimport * as toastr from \"toastr\";\r\ninterface IProps {}\r\ninterface IState {\r\n  listBloodPressures: Array<BloodPressure>;\r\n  isReady: Boolean;\r\n  hasError: Boolean;\r\n}\r\n\r\nclass Index extends React.Component<IProps, IState> {\r\n  public state: IState = {\r\n    listBloodPressures: new Array<BloodPressure>(),\r\n    isReady: false,\r\n    hasError: false,\r\n  };\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      isReady: false,\r\n      listBloodPressures: Array<BloodPressure>(),\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  public componentDidMount() {\r\n    BaseService.getAll<BloodPressure>(\"/blood_pressure\").then((rp) => {\r\n      if (rp.Status) {\r\n        var data = rp.Data;\r\n        data = JSON.parse(data);\r\n        const listBloodPressures = new Array<BloodPressure>();\r\n        data.forEach((bp: BloodPressure) => {\r\n          listBloodPressures.push(new BloodPressure(bp.SystolicReading, bp.DiabolicReading, bp.HeartRate, bp.ExamDate, bp.CreatedDate, bp.UpdatedDate, bp.Id));\r\n        });\r\n\r\n        this.setState({ listBloodPressures: listBloodPressures }); \r\n        this.setState({ isReady: true });\r\n      } else {\r\n        this.setState({ isReady: true });\r\n        this.setState({ hasError: true });\r\n        console.log(\"Messages: \" + rp.Messages);\r\n        console.log(\"Exception: \" + rp.Exception);\r\n      }\r\n    });\r\n\r\n    setTimeout(() => {\r\n      if (!this.state.isReady) {\r\n        toastr.info(\r\n          \"Service may have restarted, please wait!\",\r\n          \"\",\r\n          { timeOut: 8000 }\r\n        );\r\n      }\r\n\r\n      if (this.state.hasError) {\r\n        toastr.error(\r\n          \"An error occurred!\",\r\n          \"\",\r\n          { timeOut: 8000 }\r\n        );\r\n      }\r\n    }, 2000);\r\n  }\r\n\r\n  public tabRow = () => {\r\n    if (!this.state.isReady) {\r\n      return (\r\n        <tr>\r\n          <td colSpan={6} className=\"text-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    if (this.state.hasError) {\r\n      return (\r\n        <tr>\r\n          <td colSpan={6} className=\"text-center\">\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              An error occurred!\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    return this.state.listBloodPressures.map(function (object, i) {\r\n      return <TableRow key={i} index={i + 1} bloodPressure={object} />;\r\n    });\r\n  };\r\n\r\n  public render(): React.ReactNode {\r\n    return (\r\n      <div>\r\n        <h3 className=\"text-center\">Blood Pressure List</h3>\r\n        <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Index</th>\r\n              <th>Systolic</th>\r\n              <th>Diastolic</th>\r\n              <th>Heart Rate</th>\r\n              <th>Exam Date</th>\r\n              <th className=\"text-center\" colSpan={2}>\r\n                Action\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{this.tabRow()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}